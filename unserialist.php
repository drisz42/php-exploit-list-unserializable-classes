<?php
// Add the method below into the class where there is the unserialize flaw.
	protected function getsource($cn, $method) {
        $func = new ReflectionMethod($cn, $method);

        $f = $func->getFileName();
        if ($f == '') {
            echo $cn."::".$method."\n";
            return;
        }
        echo $cn."::".$method."\n";
        $start_line = $func->getStartLine() - 1;
        $end_line = $func->getEndLine();
        $length = $end_line - $start_line;

        $source = file($f);
        $source = implode('', array_slice($source, 0, count($source)));
        $source = preg_split("/(\n|\r\n|\r)/", $source);

        $body = '';
                for($i=$start_line; $i<$end_line; $i++)
                    $body.="{$source[$i]}\n";

        echo $body;
    }

    protected function foo()
    {
	// copy the lines below into the method that unserialize unfiltered user input
	$cls = get_declared_classes();

	echo "<pre>";
	foreach ($cls as $value){
    	try {
        	$this->getsource($value, '__destruct');
        	$this->getsource($value, '__wakeup');
        	$this->getsource($value, '__tostring');
    	}
    	catch (Exception $e) {;}
	}
	echo "</pre>";

	exit(0);
?>
